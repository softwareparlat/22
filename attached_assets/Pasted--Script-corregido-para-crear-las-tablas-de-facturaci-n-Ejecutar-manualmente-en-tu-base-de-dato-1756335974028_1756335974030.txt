
-- Script corregido para crear las tablas de facturación
-- Ejecutar manualmente en tu base de datos Neon

-- 1. Crear tabla de métodos de pago
CREATE TABLE IF NOT EXISTS payment_methods (
    id SERIAL PRIMARY KEY,
    user_id INTEGER NOT NULL REFERENCES users(id),
    type VARCHAR(50) NOT NULL, -- 'card', 'bank_transfer', 'mercadopago'
    provider VARCHAR(100), -- 'visa', 'mastercard', 'mercadopago'
    last4 VARCHAR(4),
    expiry_date VARCHAR(7), -- MM/YYYY
    holder_name VARCHAR(255),
    bank_name VARCHAR(255),
    account_number VARCHAR(255),
    is_default BOOLEAN NOT NULL DEFAULT false,
    is_active BOOLEAN NOT NULL DEFAULT true,
    metadata JSONB, -- Para datos específicos del proveedor
    created_at TIMESTAMP DEFAULT NOW(),
    updated_at TIMESTAMP DEFAULT NOW()
);

-- 2. Crear tabla de facturas
CREATE TABLE IF NOT EXISTS invoices (
    id SERIAL PRIMARY KEY,
    invoice_number VARCHAR(50) NOT NULL UNIQUE,
    project_id INTEGER NOT NULL REFERENCES projects(id),
    client_id INTEGER NOT NULL REFERENCES users(id),
    amount DECIMAL(12,2) NOT NULL,
    status VARCHAR(50) NOT NULL DEFAULT 'pending', -- 'pending', 'paid', 'overdue', 'cancelled'
    due_date TIMESTAMP NOT NULL,
    paid_date TIMESTAMP,
    description TEXT,
    tax_amount DECIMAL(12,2) DEFAULT 0.00,
    discount_amount DECIMAL(12,2) DEFAULT 0.00,
    total_amount DECIMAL(12,2) NOT NULL,
    payment_method_id INTEGER REFERENCES payment_methods(id),
    notes TEXT,
    created_at TIMESTAMP DEFAULT NOW(),
    updated_at TIMESTAMP DEFAULT NOW()
);

-- 3. Crear tabla de transacciones
CREATE TABLE IF NOT EXISTS transactions (
    id SERIAL PRIMARY KEY,
    invoice_id INTEGER REFERENCES invoices(id),
    payment_method_id INTEGER REFERENCES payment_methods(id),
    user_id INTEGER NOT NULL REFERENCES users(id),
    type VARCHAR(50) NOT NULL, -- 'payment', 'refund', 'fee'
    amount DECIMAL(12,2) NOT NULL,
    status VARCHAR(50) NOT NULL DEFAULT 'pending', -- 'pending', 'completed', 'failed', 'cancelled'
    description TEXT NOT NULL,
    transaction_id VARCHAR(255), -- ID de transacción externa
    provider_data JSONB, -- Respuesta del proveedor de pagos
    processed_at TIMESTAMP,
    created_at TIMESTAMP DEFAULT NOW()
);

-- 4. Crear índices para mejor rendimiento
CREATE INDEX IF NOT EXISTS idx_invoices_client_id ON invoices(client_id);
CREATE INDEX IF NOT EXISTS idx_invoices_project_id ON invoices(project_id);
CREATE INDEX IF NOT EXISTS idx_invoices_status ON invoices(status);
CREATE INDEX IF NOT EXISTS idx_payment_methods_user_id ON payment_methods(user_id);
CREATE INDEX IF NOT EXISTS idx_transactions_user_id ON transactions(user_id);
CREATE INDEX IF NOT EXISTS idx_transactions_invoice_id ON transactions(invoice_id);

-- 5. Insertar datos de ejemplo
INSERT INTO payment_methods (user_id, type, provider, last4, expiry_date, holder_name, is_default)
VALUES
(2, 'card', 'visa', '4532', '12/2026', 'Cliente Test', true),
(2, 'bank_transfer', 'santander', '5678', NULL, 'Cliente Test', false);

-- 6. Insertar facturas de ejemplo
INSERT INTO invoices (invoice_number, project_id, client_id, amount, status, due_date, total_amount, description)
VALUES
('INV-2024-001', 2, 2, 5000.00, 'paid', '2024-01-15'::timestamp, 5000.00, 'Desarrollo App Mobile - Primera fase'),
('INV-2024-002', 2, 2, 2500.00, 'pending', '2024-02-15'::timestamp, 2500.00, 'Desarrollo App Mobile - Segunda fase');

-- 7. Insertar transacciones de ejemplo
INSERT INTO transactions (invoice_id, payment_method_id, user_id, type, amount, status, description, processed_at)
VALUES
(1, 1, 2, 'payment', 5000.00, 'completed', 'Pago de factura INV-2024-001', NOW()),
(1, NULL, 2, 'fee', 150.00, 'completed', 'Comisión MercadoPago', NOW());
